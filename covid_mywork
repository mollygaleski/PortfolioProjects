SELECT
  *
FROM
  mollysportfolio.Covid.covid_deaths2
ORDER BY
  3,
  4;
  --Data that I am going to be using
SELECT
  location,
  date,
  total_cases,
  new_cases,
  total_deaths,
  population
FROM
  mollysportfolio.Covid.covid_deaths2
ORDER BY
  1,
  2;
  --Looking at Total Cases vs Total Deaths
  --Shows likelihood of dying if you contract covid in your country
SELECT
  location,
  date,
  total_cases,
  total_deaths,
  (total_deaths/total_cases)*100 AS Death_Percentage
FROM
  `mollysportfolio.Covid.covid_deaths2`
WHERE
  location LIKE '%States'
ORDER BY
  1,
  2;
  --Looking at Total Cases vs Population
  --Shows what percentage of population got Covid
SELECT
  location,
  date,
  total_cases,
  Population,
  (total_cases/population)*100 AS Death_Percentage
FROM
  mollysportfolio.Covid.covid_deaths2
WHERE
  location LIKE '%States'
ORDER BY
  1,
  2;
  --Looking at countries with highest infection rate compared to population
SELECT
  location,
  population,
  MAX(total_cases) AS HighestInfectionCount,
  MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM
  mollysportfolio.Covid.covid_deaths2
GROUP BY
  location,
  population
ORDER BY
  PercentPopulationInfected DESC;
  --Showing Countries with Highest Death Count per Population
SELECT
  location,
  MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM
  mollysportfolio.Covid.covid_deaths2
WHERE
  continent IS NOT NULL
GROUP BY
  Location
ORDER BY
  TotalDeathCount DESC;
  --Breaking Data By Continent
  --Showing continents with the highest death count per population
SELECT
  continent,
  MAX(CAST(total_deaths AS int)) AS TotalDeathCount
FROM
  mollysportfolio.Covid.covid_deaths2
WHERE
  continent IS NOT NULL
GROUP BY
  continent
ORDER BY
  TotalDeathCount DESC;
  --GLOBAL NUMBERS
SELECT
  date,
  SUM(new_cases) AS total_cases,
  SUM(CAST(new_deaths AS int)) AS total_deaths,
  SUM(CAST(new_deaths AS int))/SUM(new_cases)*100 AS DeathPercentage
FROM
  mollysportfolio.Covid.covid_deaths2
WHERE
  continent IS NOT NULL
GROUP BY
  date
ORDER BY
  1,
  2;
  --Total Population vs Total Vaccinations
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS BIGINT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM
  mollysportfolio.Covid.covid_deaths2 dea
JOIN
  mollysportfolio.Covid.covid_vaccinations vac
ON
  dea.location = vac.location
  AND dea.date = vac.date
WHERE
  dea.continent IS NOT NULL
ORDER BY
  2,
  3;
  --Using CTE
WITH
  PopulationVSVacc AS (
  SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS BIGINT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
  FROM
    mollysportfolio.Covid.covid_deaths2 dea
  JOIN
    mollysportfolio.Covid.covid_vaccinations vac
  ON
    dea.location = vac.location
    AND dea.date = vac.date
  WHERE
    dea.continent IS NOT NULL
  ORDER BY
    2,
    3 )
SELECT
  *,
  (RollingPeopleVaccinated / population) * 100 AS PercentPopulationVaccinated
FROM
  PopulationVSVacc; CREATE TEMP TABLE PercentPopulationVaccinated ( Continent STRING,
    Location STRING,
    Date DATE,
    Population NUMERIC,
    New_vaccinations NUMERIC,
    RollingPeopleVaccinated NUMERIC );
INSERT INTO
  PercentPopulationVaccinated (Continent,
    Location,
    Date,
    Population,
    New_vaccinations,
    RollingPeopleVaccinated)
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS BIGINT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM
  mollysportfolio.Covid.covid_deaths2 dea
JOIN
  mollysportfolio.Covid.covid_vaccinations vac
ON
  dea.location = vac.location
  AND dea.date = vac.date
WHERE
  dea.continent IS NOT NULL
ORDER BY
  2,
  3;
SELECT
  Continent,
  Location,
  Date,
  (RollingPeopleVaccinated/Population)*100 AS PercentPopulationVaccinated
FROM
  PercentPopulationVaccinated;
  --Creating View to store data for visualizations
CREATE VIEW
  PercentPopulationVaccinated AS
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS BIGINT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM
  mollysportfolio.Covid.covid_deaths2 dea
JOIN
  mollysportfolio.Covid.covid_vaccinations vac
ON
  dea.location = vac.location
  AND dea.date = vac.date
WHERE
  dea.continent IS NOT NULL;
SELECT
  *
FROM
  PercentPopulationVaccinated
